{% load staticfiles %}
<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="{% static "service/libraries/jquery/jquery-2.0.0.min.js" %}"></script>

<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="{% static "service/libraries/bootstrap/js/bootstrap.min.js"%} "></script>

<!-- Plugins -->
<script src="{% static "service/libraries/plugins/jquery.lazyload.min.js"%} "></script>

<script src="{% static "service/libraries/angularjs/angular.js" %}"></script>
<script src="{% static "service/libraries/angularjs/angular-route.js" %}"></script>
<script src="{% static "service/libraries/angularjs/angular-ui-router.min.js" %}"></script>


<!-- heroes css -->
<link href="{% static "service/media/_src/_d2/heroes-css-framework.css" %}" rel="stylesheet">


<!--
demoApp.config(function($routeProvider) {
	//$locationProvider.html5Mode(true);
	$routeProvider
	    .when('posts',{
	    	url : '/posts',
	        templateUrl: '/angular/tpl/posts/',
	        controller: 'ApiPostsController'
	    })
	    .when('comments',{
	    	url: '/comments',
	        templateUrl: '/angular/tpl/posts/',
	        controller: 'ApiPostsController'
	    });            
});
-->

<script>
"use strict";
var demoApp = angular.module('demoApp', ['ngRoute', 'ui.router']);

//#! factory
//#! Posts
demoApp.factory('ApiPostsFactory', function($http) {
	return {
        get: function(url) {
			return $http.get(url).then(function (response) {
			     if (response.data.error) {
			         return null;
			     } else {
			         //console.log(response.data);
			         return response.data;
			     }
			});
        }
    };
});
//#! Comments

//#! config route
demoApp.config(function($routeProvider) {
	//$locationProvider.html5Mode(true);
	$routeProvider
	    .when('/posts',{
	        templateUrl: '/angular/tpl/posts/',
	        controller: 'ApiPostsController'
	    })
	    .when('/posts/comments',{
	        templateUrl: '/angular/tpl/posts/',
	        controller: 'ApiCommentsController'
	    }).
      	otherwise({
        	redirectTo: '/posts'
      	});
});
 
//#! controller
demoApp.controller('ApiPostsController', function($route,$scope, ApiPostsFactory){	
	
	
	$scope.loadFetchData = function(){
		var url = '/api/posts/showByLimit/' + $scope.page + '/' + $scope.limit;
		ApiPostsFactory.get(url).then(function(data) {
			$scope.more = data.length === $scope.limit;
	        $scope.posts = $scope.posts.concat(data);
	    });
    };
    	
	$scope.loadApiPostsCtrl = function(){
		$scope.page += 1;
		$scope.loadFetchData();
	};

	$scope.loadhasMore = function() {
        return $scope.more;
	};
	
	//# init
	$scope.page = 1;
	$scope.limit = 2;
	$scope.more = true;
	$scope.posts = [];
	$scope.loadFetchData();

});


demoApp.controller('ApiCommentsController', function($scope, ApiPostsFactory, ApiPostsController){		
	$scope.loadApiCommentsCtrl = function(){
		$('.comm-modal-wrpp-comments').show();	
 	};
 	
 	$scope.closeApiCommentsCtrl = function(){
 		$('.comm-modal-wrpp').hide();
 	};
 	
 	//# init
 	$scope.loadApiCommentsCtrl();
	
});


/** Ajax Spinner **/
angular.module('services.SharedServices', []).config(function ($httpProvider) {
    $httpProvider.responseInterceptors.push('myHttpInterceptor');
    var spinnerFunction = function (data, headersGetter) {
        $("#loading").show();
        return data;
    };
    $httpProvider.defaults.transformRequest.push(spinnerFunction);
}).factory('myHttpInterceptor', function ($q, $window) {
    return function (promise) {
        return promise.then(function (response) {
            $("#loading").hide();
            return response;
        }, function (response) {
            $("#loading").hide();
            return $q.reject(response);
        });
    };
});
/** Ajax Spinner **/ 

</script>

<script>

	//#! post image lazy
	$('.comm-posts-img-lazy').lazyload({
	    effect : "fadeIn",
	    threshold : 5
	});

	//#! modal post/comments
	$('.comm-open-modal-share').on('click', function(){
		$('.comm-modal-wrpp').show();	
		$('.comm-selection-img-lazy').lazyload({
		    effect : "fadeIn",
		    threshold : 5
		});
	});
	
	$('.comm-side-modal-wrpp-close').on('click', function(){
		$('.comm-modal-wrpp').hide();
		$('.comm-modal-wrpp-comments').hide();	
	});
	

	$('.comm-open-modal-comments').on('click', function(){
		$('.comm-modal-wrpp-comments').show();	
		$('.comm-comments-img-lazy').lazyload({
		    effect : "fadeIn",
		    threshold : 5
		});
	});
	
	
	//#! menu selection
	$('.comm-prtr-selection-menu').on('click', function(event){
		//#! check if selected
		var allclss = '.comm-prtr-selection-menu';
		var clss =  'comm-prtr-selection-menu-selected';
		$(allclss).removeClass(clss);
		$(this).addClass(clss);
	});
	$('.comm-trgr-selection-menu').on('click', function(){
		var data = $(this).attr('data');
		var json = jQuery.parseJSON(data);
		$('.comm-selection-wrapp').hide();
		$(json.target).show();
	});
	
	//#! hero selection
	$('.comm-prtr-selection-btn').on('click', function(){
		//#! check if selected
		var clss =  'comm-prtr-selected';
		var data = $(this).attr('data');
		var json = jQuery.parseJSON(data);
		if($(this).hasClass(clss)){
			$(this).removeClass(clss);
			$(json.target).prop('checked', false);
		}else{
			$(this).addClass(clss);
			$(json.target).prop('checked', true);
		}
	});
	
	
	$( "#comm-posts-form" ).submit(function( event ) {
		return true;
	});		
	$( "#comm-posts-form-submit-btn" ).click(function() {
	  $( "#comm-posts-form" ).submit();
	});		


</script>
